version: '3'

services:
  # backend
  app:
    restart: on-failure
    command: sh -c "npm run migrate && node server.js"
    build:
      dockerfile: Dockerfile
      context: ./app
    depends_on:
      - postgres
      - redis
    environment:
      DATABASE_URL: postgres://user1:pass@postgres:5432/db
      PORT: 3001
      HOST: 0.0.0.0

  queue:
    restart: on-failure
    build:
      dockerfile: ./queue.Dockerfile
      context: ./app
    depends_on:
      - postgres
      - redis
      - app
    environment:
      DATABASE_URL: postgres://user1:pass@postgres:5432/db
      QUEUE_STORAGE_URL: redis://redis:6379
      PORT: 3001
      HOST: 0.0.0.0
    # wait for migrations to pass
    command: sh -c "sleep 10 && node ./scripts/queue"

  nginx:
    depends_on:
      - app
      - client
    restart: always
    build:
      dockerfile: Dockerfile
      context: ./nginx
    ports:
      - "80:80"

  # frontend
  client:
    stdin_open: true
    build:
      dockerfile: Dockerfile
      context: ./client

  redis:
    restart: unless-stopped
    image: redis
    expose:
      - 6379

  postgres:
    restart: unless-stopped
    image: postgres:15
    volumes:
      - /var/lib/postgresql:/var/lib/postgresql
    ports:
      - "35432:5432"
    environment:
      POSTGRES_USER: user1
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: db
